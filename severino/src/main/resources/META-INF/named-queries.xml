<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">
	<named-query name="ControleMotorista.findMotoristasDisponiveis">
		<query>
			select 
				cm.motorista 
			from 
				ControleMotorista as cm 
			where 
				cm.fluxo = :fluxo and 
				cm.local.id = :idLocal and
				cm.dataHora = (select max(cm2.dataHora) from ControleMotorista as cm2 where cm.motorista.id = cm2.motorista.id)
		</query>
	</named-query>
	<named-query name="ControleMotorista.findUltimoAgrupadoPorMotorista">
		<query>
			select 
				cm 
			from 
				ControleMotorista as cm 
			where
				cm.local.id = :idLocal and 
				cm.dataHora = (select max(cm2.dataHora) from ControleMotorista as cm2 where cm.motorista.id = cm2.motorista.id)
			order by
				cm.id desc
		</query>
	</named-query>
	<named-query name="ControleMotorista.findUltimoControle">
		<query>
			select 
				cm 
			from 
				ControleMotorista as cm 
			where 
				cm.motorista.id = :idMotorista and 
				cm.dataHora = (select max(cm2.dataHora) from ControleMotorista as cm2 where cm.motorista.id = cm2.motorista.id)
		</query>
	</named-query>
	<named-query name="Motorista.findMotoristasSemRegistroPonto">
		<query>
			select 
				m 
			from 
				Motorista as m 
			where 
				m.local.id = :idLocal and
				m.cargo = :cargoMotorista and 
				m.id not in (
					select distinct cm.motorista.id 
					from ControleMotorista as cm
				)
			</query>
	</named-query>
	<named-query name="Visita.findIdsConflitos">
		<query>
			select 
				v.id 
			from 
				Visita as v 
				inner join v.visitante as vi 
			where 
				upper(vi.documento) = upper(:documento) and 
				v.id &lt;&gt; :id and 
				:saida &gt;= v.entrada and 
				v.saida &gt;= :entrada
		</query>
	</named-query>
	<named-query name="Visita.countByUsuarioAndSaida">
		<query>
			select 
				count(v) 
			from 
				Visita as v 
				inner join v.visitante as vi 
			where 
				upper(vi.documento) = upper(:documento) and 
				v.saida is null and 
				v.id &lt;&gt; :id
		</query>
	</named-query>
	<named-query name="Viagem.findPassageirosUltimaViagem">
		<query>
			select 
				new br.mp.mpt.prt8.severino.valueobject.PessoaDisponibilidade(
					v.id,
					p.id.nome,
					cr.dataHora,
					cs.dataHora
				)
			from
				Viagem as v 
				inner join v.passageiros as p
				inner join v.controleSaida as cs
				left join v.controleRetorno as cr
			where
				cs.local.id = :idLocal and
				cs.dataHora = (
					select 
						max(cs2.dataHora)
					from
						Viagem as v2
						inner join v2.controleSaida as cs2
						inner join v2.passageiros as p2
					where
						p2.id.nome = p.id.nome and
						cs2.dataHora between :inicio and :fim
				)
		</query>
	</named-query>
	<named-query name="AcessoGaragem.findUltimaDisponibilidade">
		<query>
			select
				new br.mp.mpt.prt8.severino.valueobject.PessoaDisponibilidade(
					ag.id,
					m.nome,
					ag.entrada,
					ag.saida
				)
			from
				AcessoGaragem as ag 
				inner join ag.motorista as m
			where
				ag.local.id = :idLocal and
				ag.entrada = (
					select 
						max(ag2.entrada) 
					from 
						AcessoGaragem as ag2
					where
						ag2.motorista.id = ag.motorista.id and
						ag2.entrada between :inicio and :fim
				)
		</query>
	</named-query>
	<named-query name="ControleMotorista.findControleAnterior">
		<query>
			select
				new br.mp.mpt.prt8.severino.entity.ControleMotorista(
					cm.dataHora,
					cm.fluxo
				)
			from
				ControleMotorista as cm
			where
				cm.motorista.id = :idMotorista and
				cm.dataHora = (
					select 
						max(cm2.dataHora)
					from
						ControleMotorista cm2
					where
						cm2.dataHora &lt; :dataHora and
						cm2.motorista.id = cm.motorista.id
				)
		</query>
	</named-query>
	<named-query name="ControleMotorista.findControleProximo">
		<query>
			select
				new br.mp.mpt.prt8.severino.entity.ControleMotorista(
					cm.dataHora,
					cm.fluxo
				)
			from
				ControleMotorista as cm
			where
				cm.motorista.id = :idMotorista and
				cm.dataHora = (
					select 
						min(cm2.dataHora)
					from
						ControleMotorista cm2
					where
						cm2.dataHora &gt; :dataHora and
						cm2.motorista.id = cm.motorista.id
				)
		</query>
	</named-query>
</entity-mappings>